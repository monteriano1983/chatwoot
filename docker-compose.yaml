version: '3'

services:

  base: &base
    image: chatwoot/chatwoot:develop
    env_file: .env # Cambia este archivo para personalizar variables de entorno
    stdin_open: true # Habilitar docker run -i
    tty: true        # Habilitar docker run -t
    volumes:
      - ./data/storage:/app/storage # Persistencia de datos de almacenamiento

  rails:
    <<: *base
    depends_on:
      - postgres
      - redis
    ports:
      - "35.198.4.51:3000:3000" # Vincular el puerto del contenedor al puerto de la IP pública
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production   
    entrypoint: docker/entrypoints/rails.sh
    command: ['bundle', 'exec', 'rails', 's', '-p', '3000', '-b', '0.0.0.0']

  sidekiq:
    <<: *base
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=production
      - RAILS_ENV=production     
    command: ['bundle', 'exec', 'sidekiq', '-C', 'config/sidekiq.yml']

  postgres:
    image: postgres:15
    restart: always
    ports:
      - "35.198.4.51:5432:5432" # Exponer el puerto de PostgreSQL en la IP pública
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=chatwoot
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=chatwoot

  redis:
    image: redis:alpine
    restart: always
    command: ["sh", "-c", "redis-server --requirepass \"$REDIS_PASSWORD\""]
    env_file: .env # Cambia este archivo para personalizar variables de entorno
    volumes:
      - ./data/redis:/data
    ports:
      - "35.198.4.51:6379:6379" # Exponer Redis en la IP pública
